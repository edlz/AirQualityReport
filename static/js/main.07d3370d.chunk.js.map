{"version":3,"sources":["components/Site.jsx","App.js","reportWebVitals.js","index.js"],"names":["Site","useState","IP","setIP","message","setMessage","city","setCity","state","setState","getData","a","axios","get","res","data","ip","setTimeout","d","error","current","pollution","aqius","reloadData","useEffect","className","length","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAqEeA,EAjEF,WACX,MAAoBC,mBAAS,KAA7B,mBAAOC,EAAP,KAAWC,EAAX,KACA,EAA8BF,mBAAS,mBAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAwBJ,mBAAS,IAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAA0BN,mBAAS,IAAnC,mBAAOO,EAAP,KAAcC,EAAd,KAEMC,EAAO,uCAAG,8BAAAC,EAAA,sEACIC,IAAMC,IACtB,gFAFY,cACRC,EADQ,OAIdX,EAAMW,EAAIC,KAAKC,IACfC,WAAW,KALG,SAMEL,IAAMC,IAAN,0FACqEX,IAPvE,QAMRgB,EANQ,QASRH,KAAKI,MACTd,EAAW,WAAaa,EAAEH,KAAKI,QAE/BV,EAASS,EAAEH,KAAKA,KAAKP,OACrBD,EAAQW,EAAEH,KAAKA,KAAKT,MACpBD,EAAW,UAAD,OAAWa,EAAEH,KAAKA,KAAKK,QAAQC,UAAUC,SAdvC,2CAAH,qDAiBPC,EAAU,uCAAG,4BAAAZ,EAAA,6DACjBN,EAAW,gBADM,SAEDO,IAAMC,IAAN,0FACqEX,IAHpE,QAEXgB,EAFW,QAKXH,KAAKI,MACTd,EAAW,8BAEXI,EAASS,EAAEH,KAAKA,KAAKP,OACrBD,EAAQW,EAAEH,KAAKA,KAAKT,MACpBD,EAAW,UAAD,OAAWa,EAAEH,KAAKA,KAAKK,QAAQC,UAAUC,SAVpC,2CAAH,qDAkBhB,OAJAE,qBAAU,WACRd,MACC,IAGD,sBAAKe,UAAU,iBAAf,UACE,gCACE,sBAAKA,UAAU,UAAf,iBAA8BvB,KAC9B,sBAAKuB,UAAU,gBAAf,uBACanB,EAAKoB,OAAS,EAAd,UAAqBpB,EAArB,aAA8BE,GAAU,OAErD,sBAAKiB,UAAU,eAAf,2BAA6CrB,KAC7C,wBAAQqB,UAAU,MAAME,QAASJ,EAAjC,4BAIF,gCACE,0BACA,0BACA,0BACA,wBAAQE,UAAU,MAAlB,uBAGF,qBAAKA,UAAU,cAAf,mB,MCnDSG,MAJf,WACE,OAAO,cAAC,EAAD,KCEMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.07d3370d.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./Site.css\";\r\nconst Site = () => {\r\n  const [IP, setIP] = useState(\"?\");\r\n  const [message, setMessage] = useState(\"Loading Data...\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [state, setState] = useState(\"\");\r\n\r\n  const getData = async () => {\r\n    const res = await axios.get(\r\n      \"https://v6q7nq61ab.execute-api.us-west-1.amazonaws.com/default/getAirQuality\"\r\n    );\r\n    setIP(res.data.ip);\r\n    setTimeout(1000);\r\n    const d = await axios.get(\r\n      `https://dyrbwt49he.execute-api.us-west-1.amazonaws.com/default/getAirQuality?ip=${IP}`\r\n    );\r\n    if (d.data.error) {\r\n      setMessage(\"ERROR - \" + d.data.error);\r\n    } else {\r\n      setState(d.data.data.state);\r\n      setCity(d.data.data.city);\r\n      setMessage(`US AQI ${d.data.data.current.pollution.aqius}`);\r\n    }\r\n  };\r\n  const reloadData = async () => {\r\n    setMessage(\"Reloading...\");\r\n    const d = await axios.get(\r\n      `https://dyrbwt49he.execute-api.us-west-1.amazonaws.com/default/getAirQuality?ip=${IP}`\r\n    );\r\n    if (d.data.error) {\r\n      setMessage(\"Error requesting from API\");\r\n    } else {\r\n      setState(d.data.data.state);\r\n      setCity(d.data.data.city);\r\n      setMessage(`US AQI ${d.data.data.current.pollution.aqius}`);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"main-container\">\r\n      <div>\r\n        <div className=\"ip-text\">IP: {IP}</div>\r\n        <div className=\"location-text\">\r\n          Location: {city.length > 0 ? `${city}, ${state}` : \"?\"}\r\n        </div>\r\n        <div className=\"quality-text\">Air Quality : {message}</div>\r\n        <button className=\"btn\" onClick={reloadData}>\r\n          Reload Data\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <input></input>\r\n        <input></input>\r\n        <input></input>\r\n        <button className=\"btn\">Search</button>\r\n      </div>\r\n\r\n      <div className=\"quality-bar\">a</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Site;\r\n","import React from \"react\";\n\n// components\n\nimport Site from \"./components/Site\";\n\n//styles\nimport \"./App.css\";\n\nfunction App() {\n  return <Site />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}